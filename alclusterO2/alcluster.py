import time
from pyscf import gto, scf, dft, df, lib
from pyscf.dft import gen_grid
from pyscf.scf.addons import remove_linear_dep_, smearing_


#create a cluster of Al atoms
cluster = gto.Mole()
cluster.atom= '''

Al  0.00000000  0.00000000  0.00000000
Al  0.00000000 -3.29777172  2.33187675
Al  0.00000000 -6.59554425  4.66375407
Al  0.00000000 -9.89331597  6.99563081
Al -2.85595408  1.64888586  2.33187675
Al -2.85595408 -1.64888586  4.66375349
Al -2.85595408 -4.94665840  6.99563081
Al -5.71190888  3.29777213  4.66375407
Al -5.71190888  0.00000041  6.99563081
Al -8.56786296  4.94665799  6.99563081
Al  2.85595408  1.64888586  2.33187675
Al  2.85595408 -1.64888586  4.66375349
Al  2.85595408 -4.94665840  6.99563081
Al  0.00000000  3.29777172  4.66375349
Al  0.00000000  0.00000000  6.99563024
Al -2.85595479  4.94665799  6.99563081
Al  5.71190888  3.29777213  4.66375407
Al  5.71190888  0.00000041  6.99563081
Al  2.85595479  4.94665799  6.99563081
Al  8.56786296  4.94665799  6.99563081
Al -1.42797740 -0.82444313  2.33187732
Al -1.42797740 -4.12221485  4.66375407
Al -1.42797740 -7.41998739  6.99563139
Al -4.28393148  0.82444273  4.66375407
Al -4.28393148 -2.47332899  6.99563081
Al -7.13988627  2.47332899  6.99563139
Al  1.42797669  0.82444273  4.66375407
Al  1.42797669 -2.47332899  6.99563081
Al -1.42797740  2.47332859  6.99563081
Al  4.28393148  2.47332899  6.99563139
Al  1.42797740 -0.82444313  2.33187732
Al  1.42797740 -4.12221485  4.66375407
Al  1.42797740 -7.41998739  6.99563139
Al -1.42797669  0.82444273  4.66375407
Al -1.42797669 -2.47332899  6.99563081
Al -4.28393148  2.47332899  6.99563139
Al  4.28393148  0.82444273  4.66375407
Al  4.28393148 -2.47332899  6.99563081
Al  1.42797740  2.47332859  6.99563081
Al  7.13988627  2.47332899  6.99563139
Al  0.00000000  1.64888627  2.33187732
Al  0.00000000 -1.64888545  4.66375407
Al  0.00000000 -4.94665799  6.99563139
Al -2.85595408  3.29777213  4.66375407
Al -2.85595408  0.00000041  6.99563081
Al -5.71190888  4.94665840  6.99563139
Al  2.85595408  3.29777213  4.66375407
Al  2.85595408  0.00000041  6.99563081
Al -0.00000000  4.94665799  6.99563081
Al  5.71190888  4.94665840  6.99563139
O   1.42798000  0.82444000  8.00000000
O   0.00000000  -1.8000000  8.00000000

'''
#6-311G++**
cluster.basis={
'O': gto.basis.parse('''
O     S
      0.5484671660E+04       0.1831074430E-02
      0.8252349460E+03       0.1395017220E-01
      0.1880469580E+03       0.6844507810E-01
      0.5296450000E+02       0.2327143360E+00
      0.1689757040E+02       0.4701928980E+00
      0.5799635340E+01       0.3585208530E+00
O    SP
      0.1553961625E+02      -0.1107775495E+00       0.7087426823E-01
      0.3599933586E+01      -0.1480262627E+00       0.3397528391E+00
      0.1013761750E+01       0.1130767015E+01       0.7271585773E+00
O    SP
      0.2700058226E+00       0.1000000000E+01       0.1000000000E+01
O    SP
      0.8450000000E-01       0.1000000000E+01       0.1000000000E+01
O    D
      0.8000000000E+00       1.0000000
'''),
'Al':gto.basis.parse('''
Al    S
      0.1398310000E+05       0.1942669947E-02
      0.2098750000E+04       0.1485989959E-01
      0.4777050000E+03       0.7284939800E-01
      0.1343600000E+03       0.2468299932E+00
      0.4287090000E+02       0.4872579866E+00
      0.1451890000E+02       0.3234959911E+00
Al    SP
      0.2396680000E+03      -0.2926190028E-02       0.4602845582E-02
      0.5744190000E+02      -0.3740830036E-01       0.3319896813E-01
      0.1828590000E+02      -0.1144870011E+00       0.1362818692E+00
      0.6599140000E+01       0.1156350011E+00       0.3304756828E+00
      0.2490490000E+01       0.6125950058E+00       0.4491455689E+00
      0.9445450000E+00       0.3937990037E+00       0.2657037450E+00
Al    SP
      0.1277900000E+01      -0.2276069245E+00      -0.1751260189E-01
      0.3975900000E+00       0.1445835873E-02       0.2445330264E+00
      0.1600950000E+00       0.1092794439E+01       0.8049340867E+00
Al    SP
      0.5565770000E-01       0.1000000000E+01       0.1000000000E+01
Al    SP
      0.3180000000E-01       0.1000000000E+01       0.1000000000E+01
Al    D
      0.3250000000E+00       1.0000000
''')



}
#spherical gaussians
cluster.cart = False
#keep integrals in RAM
cluster.incore_anyway = True
cluster.build()

# ---------- KS object ----------
mf = dft.RKS(cluster, xc='PBE')
mf = mf.newton()
mf = mf.density_fit(auxbasis='weigend')   # enable RI-J first
mf = mf.apply(remove_linear_dep_)
mf.direct_scf = True
mf.max_cycle = 80
mf.conv_tol = 5e-05 
mf.conv_tol_grad = 4.5e-04
mf.max_stepsize = 1.8e-03
# Metallic stability
mf = smearing_(mf, sigma=0.01, method='fermi')
mf.verbose = 4
mf.grids.level = 4
mf.small_rho_cutoff = 1e-6
mf.diis_space  = 12
mf.level_shift = 0.2
mf.damp        = 0.15

# Log sizes
mf.grids.build(with_non0tab=True)
e=mf.kernel()
ngrid = sum(len(b) for b in mf.grids.coords)
nao = cluster.nao_nr()
with open('./grid.dat', 'w') as f:
    f.write('total energy:' + str(e))
    f.write(f"grid points: {int(ngrid)}\n")
    f.write(f"number of orbitals: {int(nao)}\n")
